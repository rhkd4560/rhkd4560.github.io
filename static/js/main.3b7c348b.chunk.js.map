{"version":3,"sources":["data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Parent","props","Child1","name","Child2","age","useEffect","console","log","memo","connect","state","reducer","alertState","alertReducer","useState","alertClose","setAlertClose","Table","responsive","map","a","i","quan","onClick","dispatch","type","payload","className","DetailPage","lazy","lastDataContext","React","createContext","Card","useContext","history","useHistory","push","shoes","src","width","Test","재고","App","SampleData","changeShoes","lastData","setLastData","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","Provider","value","axios","get","then","result","data","catch","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","basicState","store","createStore","combineReducers","action","found","findIndex","e","copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b7c348b.chunk.js","sourcesContent":["export default [\r\n    {\r\n        id: 0,\r\n        title : \"white and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n    },\r\n\r\n    {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n    },\r\n\r\n    {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n    }\r\n]","import React, { useEffect, useState, memo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props) {\r\n    let [alertClose, setAlertClose] = useState(true);\r\n    return (\r\n        <div>\r\n            <Table responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>상품명</th>\r\n                        <th>수량</th>\r\n                        <th>변경</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.state.map((a, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{a.id}</td>\r\n                                    <td>{a.name}</td>\r\n                                    <td>{a.quan}</td>\r\n                                    <td><button onClick={() => {\r\n                                        props.dispatch({ type: 'Increase' , payload: a.id})\r\n                                    }}>+</button><button onClick={() => {\r\n                                        props.dispatch({ type: 'Decrease', payload: a.id })\r\n                                    }}>-</button></td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            {   alertClose === true \r\n                ? \r\n                (<div className=\"my-alert2\">\r\n                    <p>지금 구매하시면 신규할인 20%</p>\r\n                    <button onClick={()=>{setAlertClose(false)}}>닫기</button>\r\n                </div>)\r\n                : null\r\n            }\r\n            \r\n            {/* {   //잘못된 코딩방식 짜잘한것은 useState로 관리하는게 편리\r\n                props.alertState === true \r\n                ? \r\n                (<div className=\"my-alert2\">\r\n                    <p>지금 구매하시면 신규할인 20%</p>\r\n                    <button onClick={()=>{props.dispatch({type : 'close'})}}>닫기</button>\r\n                </div>)\r\n                : null\r\n            } */}\r\n            <Parent name=\"Choi\" age =\"27\"></Parent>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Parent(props){\r\n    return(\r\n        <div>\r\n            <Child1 name={props.name}></Child1>\r\n            <Child2 age={props.age}></Child2>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Child1(props){\r\n    useEffect(()=> {console.log('렌더링됨1')});\r\n    return <div>1111</div>\r\n}\r\n\r\nlet Child2 = memo(function(props){\r\n    useEffect(()=> {console.log('렌더링됨2')});\r\n    return <div>2222</div>;\r\n});\r\n\r\n\r\nfunction changeState(state) {    //redux store 데이터 가져와서 props로 변환해주는 함수\r\n    return {\r\n        state: state.reducer,\r\n        alertState: state.alertReducer\r\n    }\r\n}\r\nexport default connect(changeState)(Cart);\r\n\r\n// export default Cart;","/*eslint-disable*/\n\nimport './App.css';\nimport { Navbar, Nav, NavDropdown, Jumbotron, Button } from 'react-bootstrap';\nimport React, { useState, useContext, lazy, Suspense } from 'react';\nimport SampleData from './data.js';\n// import DetailPage from './DetailPage';\nlet DetailPage = lazy(() => import('./DetailPage.js'))\nimport axios from 'axios';\nimport Cart from './Cart'\n\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\n//context만들기\nexport let lastDataContext = React.createContext(); //같은 변수 값을 공유할 범위 생성\n\n\nfunction App() {\n\n  let [shoes, changeShoes] = useState(SampleData);\n  let [lastData, setLastData] = useState([10, 11, 12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\" >\n        <Navbar.Brand href=\"#home\">UNCIA</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n        </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <lastDataContext.Provider value={lastData}>\n              <div className=\"row\">\n                {\n                  shoes.map((a, i) => {\n                    return <Card shoes={a} i={i} key={i} />\n                  })\n                }\n              </div>\n            </lastDataContext.Provider>\n            <button className=\"btn btn-primary\" onClick={() => {\n              //axios post방식\n              // axios.post('서버URL', { id: 'codingapple', pw:1234});\n\n              //쌩 자바스크립트 코드\n              // fetch('https://codingapple1.github.io/shop/data2.json').then()\n\n              //axios는 JSON을 Object로 자동으로 변환 해줌\n              axios.get('https://codingapple1.github.io/shop/data2.json') //axios get요청\n                .then((result) => {\n                  //shoes 카피 [...shoes]\n                  changeShoes([...shoes, ...result.data]);\n                }) //성공했을시\n                .catch(() => {\n\n                })  //실패했을시\n            }}>더보기</button>\n          </div>\n        </Route>\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n        <lastDataContext.Provider value={lastData}>\n          <Route path=\"/detail/:id\">\n            <Suspense fallback={<div>로딩중이에요</div>}>\n              <DetailPage shoes={shoes} lastData={lastData} setLastData={setLastData} />\n            </Suspense>\n          </Route>\n        </lastDataContext.Provider>\n        {/* Switch 중복매칭되었을때 하나만 보여주는 것 */}\n      </Switch>\n      {/* 해당 경로로 이동시 Modal Component 오픈 <Route path=\"/sample\" component={Modal}></Route> */}\n    </div>\n  );\n}\n\nfunction Card(props) {\n\n  let 재고 = useContext(lastDataContext);\n  let history = useHistory();\n  return (\n    <div className=\"col-md-4\" onClick={() => { history.push('/detail/' + props.shoes.id) }}>\n      <img src={\"https://codingapple1.github.io/shop/shoes\" + (props.i + 1) + \".jpg\"}\n        width=\"100%\" />\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content} & {props.shoes.price}</p>\n      <Test></Test>\n    </div>\n  )\n}\n\nfunction Test() {\n  let 재고 = useContext(lastDataContext);\n  return (\n    <p> 재고 : {재고[0]}</p>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet basicState = [\n  { id: 0, name: '멋진신발', quan: 2 },\n  { id: 1, name: '멋진신발2', quan: 1 }\n];\nlet alertState = true;\n\nfunction alertReducer(state = alertState, action) {\n  if (action.type === 'close') {\n    state = false;\n    return state;\n  } else {\n    return state;\n  }\n}\n\nfunction reducer(state = basicState, action) {\n  if (action.type === 'addItem') {\n    \n    //state안에 id 있는지 조회\n    let found = state.findIndex((e)=> {return e.id === action.payload.id})  //array안에서 원하는 데이터 찾아주는 함수 find도 가능 findIndex는 몇번째 항목에 있는지 까지 find는 값을 찾아주는 함수\n    if (found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      copy.push(action.payload);\n      return copy;\n    }\n  } else if (action.type === 'Increase') {\n    let copy = [...state]\n    copy[action.payload].quan++;\n    return copy;\n  } else if (action.type === 'Decrease') {\n    let copy = [...state];\n    copy[action.payload].quan--;\n    return copy;\n  } else {\n    return state;\n  }\n}\n\nlet store = createStore(combineReducers({ reducer, alertReducer }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}