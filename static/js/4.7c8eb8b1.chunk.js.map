{"version":3,"sources":["DetailPage.js"],"names":["BOX","styled","div","HEAD","h4","props","색상","TabContent","useEffect","setSwith","tab","Info","lastData","connect","state","reducer","alertState","alertReducer","useState","alert","alertChange","title","setTitle","useContext","lastDataContext","setTab","swith","timer","setTimeout","console","log","clearTimeout","id","useParams","history","useHistory","searchShoes","shoes","find","x","className","onChange","e","target","value","src","width","content","price","onClick","setLastData","dispatch","type","payload","name","quan","push","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"obASA,IAAIA,EAAMC,IAAOC,IAAV,KAIHC,EAAOF,IAAOG,GAAV,KAEM,SAAAC,GAAK,OAAIA,EAAMC,gBAoF7B,SAASC,EAAWF,GAMhB,OAJAG,qBAAU,WACNH,EAAOI,UAAS,MAGH,GAAbJ,EAAMK,IACC,+EACa,GAAbL,EAAMK,IACN,+EACa,GAAbL,EAAMK,IACN,oFADJ,EAKX,SAASC,EAAKN,GACV,OACI,gDAASA,EAAMO,SAAS,MASjBC,uBANf,SAAqBC,GACjB,MAAO,CACHA,MAAOA,EAAMC,QACbC,WAAYF,EAAMG,gBAGXJ,EA3Gf,SAAoBR,GAAQ,IAAD,EACIa,oBAAS,GADb,mBAClBC,EADkB,KACXC,EADW,OAECF,mBAAS,IAFV,mBAElBG,EAFkB,KAEXC,EAFW,QAGdC,qBAAWC,KAEAN,mBAAS,IALN,mBAKlBR,EALkB,KAKbe,EALa,OAMCP,oBAAS,GANV,mBAMlBQ,EANkB,KAMXjB,EANW,KAQvBD,qBAAU,WAEN,IAAImB,EAAQC,YAAW,WAAQR,GAAY,KAAU,KAIrD,OADAS,QAAQC,IAAI,GACL,WAAQC,aAAaJ,MAC7B,CAGIR,IAlBgB,IAqBjBa,EAAOC,cAAPD,GACFE,EAAUC,cAEVC,EAAc/B,EAAMgC,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEP,IAAMA,KAChD,OACI,sBAAKQ,UAAU,YAAf,UACI,cAACxC,EAAD,UACI,cAACG,EAAD,CAAMqC,UAAU,MAAhB,8CAEHnB,EACD,uBAAOoB,SAAU,SAACC,GAAQpB,EAASoB,EAAEC,OAAOC,WAE9B,IAAVzB,EAEQ,qBAAKqB,UAAU,YAAf,SACI,+GAGN,KAEV,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKK,IAAI,iDACLC,MAAM,WAEd,sBAAKN,UAAU,gBAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBJ,EAAYf,QAClC,4BAAIe,EAAYW,UAChB,4BAAIX,EAAYY,QAEhB,cAACrC,EAAD,CAAMC,SAAUP,EAAMO,WAEtB,wBAAQ4B,UAAU,iBAAiBS,QAAS,WACxC5C,EAAM6C,YAAY,CAAC,EAAG,GAAI,KAC1B7C,EAAM8C,SAAS,CAACC,KAAM,UAAWC,QAAS,CAACrB,GAAII,EAAYJ,GAAIsB,KAAMlB,EAAYf,MAAOkC,KAAM,KAC9FrB,EAAQsB,KAAK,UAHjB,sCAPJ,OAaI,wBAAQhB,UAAU,iBAAiBS,QAAS,WACxCf,EAAQuB,UADZ,4CAMR,eAAC,IAAD,CAAKjB,UAAU,OAAOkB,QAAQ,OAAOC,iBAAiB,SAAtD,UACI,cAAC,IAAIC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,kBAAMxB,EAAO,IAAlD,sBAEJ,cAAC,IAAImC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,kBAAMxB,EAAO,IAAlD,2BAIR,cAAC,IAAD,CAAesC,GAAIrC,EAAOsC,WAAW,MAAMC,QAAS,IAApD,SACI,cAAC1D,EAAD,CAAYG,IAAKA,EAAKD,SAAUA","file":"static/js/4.7c8eb8b1.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport { lastDataContext } from './App';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\nlet BOX = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nlet HEAD = styled.h4`\r\n    font-size : 25px;\r\n    color : ${props => props.색상}\r\n`;\r\n\r\nfunction DetailPage(props) {\r\n    let [alert, alertChange] = useState(true);\r\n    let [title, setTitle] = useState('');\r\n    let 재고 = useContext(lastDataContext);\r\n\r\n    let [tab, setTab] = useState(0);\r\n    let [swith, setSwith] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //setTimeout 주의점 페이지 나갔을 시 timer해제\r\n        let timer = setTimeout(() => { alertChange(false) }, 2000)\r\n        //업데이트 될때도 위에 코드가 또 실행되는 오류\r\n        //input이 업데이트될때마다 계속 실행됨 \r\n        console.log(1);\r\n        return () => { clearTimeout(timer) }\r\n    }, [/*  실행 조건을 넣을 수 있다 \r\n            특정 state 가 변경될때만 실행\r\n            []일 경우 업데이트시 실행이 안됨 pageLoad시 실행되고 끝\r\n        */ alert]);\r\n\r\n\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n\r\n    let searchShoes = props.shoes.find(x => x.id == id)\r\n    return (\r\n        <div className=\"container\">\r\n            <BOX>\r\n                <HEAD className=\"red\">상세페이지</HEAD>\r\n            </BOX>\r\n            {title}\r\n            <input onChange={(e) => { setTitle(e.target.value) }} />\r\n            {\r\n                alert === true\r\n                    ? (\r\n                        <div className=\"my-alert2\">\r\n                            <p>재고가 얼마 남지 않았습니다.</p>\r\n                        </div>\r\n                    )\r\n                    : null\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n                        width=\"100%\" />\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                    <h4 className=\"pt-5\">{searchShoes.title}</h4>\r\n                    <p>{searchShoes.content}</p>\r\n                    <p>{searchShoes.price}</p>\r\n\r\n                    <Info lastData={props.lastData}></Info>\r\n\r\n                    <button className=\"btn btn-danger\" onClick={() => {\r\n                        props.setLastData([9, 11, 12])\r\n                        props.dispatch({type: 'addItem', payload: {id: searchShoes.id, name: searchShoes.title, quan: 1}})\r\n                        history.push('/cart');\r\n                    }}>주문하기</button>\r\n                    &nbsp;\r\n                    <button className=\"btn btn-danger\" onClick={() => {\r\n                        history.goBack();\r\n                        // history.push('/'); \r\n                    }}>뒤로가기</button>\r\n                </div>\r\n            </div>\r\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-0\" onClick={() => setTab(0)}>Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" onClick={() => setTab(1)}>Option 2</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n            <CSSTransition in={swith} classNames=\"wow\" timeout={500}>\r\n                <TabContent tab={tab} setSwith={setSwith}/>\r\n            </CSSTransition>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TabContent(props) {\r\n\r\n    useEffect(()=> {\r\n        props. setSwith(true);\r\n    });\r\n\r\n    if (props.tab == 0) {\r\n        return <div>0번째 내용입니다</div>\r\n    } else if (props.tab == 1) {\r\n        return <div>1번째 내용입니다</div>\r\n    } else if (props.tab == 2) {\r\n        return <div>2번째 내용입니다</div>\r\n    }\r\n}\r\n\r\nfunction Info(props) {\r\n    return (\r\n        <p>재고 : {props.lastData[0]}</p>\r\n    );\r\n}\r\nfunction changeState(state) {    //redux store 데이터 가져와서 props로 변환해주는 함수\r\n    return {\r\n        state: state.reducer,\r\n        alertState: state.alertReducer\r\n    }\r\n}\r\nexport default connect(changeState)(DetailPage);"],"sourceRoot":""}